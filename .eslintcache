[{"/Users/hbalty/Projects/others/coursera/confusion/src/App.js":"1","/Users/hbalty/Projects/others/coursera/confusion/src/index.js":"2","/Users/hbalty/Projects/others/coursera/confusion/src/components/MenuComponent.component.js":"3","/Users/hbalty/Projects/others/coursera/confusion/src/components/DishdetailComponent.js":"4","/Users/hbalty/Projects/others/coursera/confusion/src/reportWebVitals.js":"5","/Users/hbalty/Projects/others/coursera/confusion/src/shared/dishes.js":"6","/Users/hbalty/Projects/others/coursera/confusion/src/components/MainComponent.component.js":"7","/Users/hbalty/Projects/others/coursera/confusion/src/components/HeaderComponent.js":"8","/Users/hbalty/Projects/others/coursera/confusion/src/components/FooterComponent.js":"9","/Users/hbalty/Projects/others/coursera/confusion/src/components/HomeComponent.js":"10","/Users/hbalty/Projects/others/coursera/confusion/src/components/ContactComponent.js":"11","/Users/hbalty/Projects/others/coursera/confusion/src/shared/leaders.js":"12","/Users/hbalty/Projects/others/coursera/confusion/src/shared/promotions.js":"13","/Users/hbalty/Projects/others/coursera/confusion/src/shared/comments.js":"14","/Users/hbalty/Projects/others/coursera/confusion/src/components/aboutusComponent.js":"15","/Users/hbalty/Projects/others/coursera/confusion/src/components/AboutusComponent.js":"16","/Users/hbalty/Projects/others/coursera/confusion/src/redux/configureStore.js":"17","/Users/hbalty/Projects/others/coursera/confusion/src/redux/dishes.js":"18","/Users/hbalty/Projects/others/coursera/confusion/src/redux/comments.js":"19","/Users/hbalty/Projects/others/coursera/confusion/src/redux/leaders.js":"20","/Users/hbalty/Projects/others/coursera/confusion/src/redux/promotions.js":"21"},{"size":575,"mtime":1613490729432,"results":"22","hashOfConfig":"23"},{"size":638,"mtime":1613229828381,"results":"24","hashOfConfig":"23"},{"size":1542,"mtime":1613389229745,"results":"25","hashOfConfig":"23"},{"size":7700,"mtime":1613499074768,"results":"26","hashOfConfig":"23"},{"size":362,"mtime":1612286551730,"results":"27","hashOfConfig":"23"},{"size":1448,"mtime":1613236201679,"results":"28","hashOfConfig":"23"},{"size":1980,"mtime":1613753317701,"results":"29","hashOfConfig":"23"},{"size":5725,"mtime":1613487157846,"results":"30","hashOfConfig":"23"},{"size":2966,"mtime":1613233350215,"results":"31","hashOfConfig":"23"},{"size":1076,"mtime":1613389127671,"results":"32","hashOfConfig":"23"},{"size":10589,"mtime":1613495309035,"results":"33","hashOfConfig":"23"},{"size":2348,"mtime":1613236270046,"results":"34","hashOfConfig":"23"},{"size":465,"mtime":1613236232487,"results":"35","hashOfConfig":"23"},{"size":4119,"mtime":1613236270778,"results":"36","hashOfConfig":"23"},{"size":3783,"mtime":1613392531733,"results":"37","hashOfConfig":"23"},{"size":4266,"mtime":1613597654809,"results":"38","hashOfConfig":"23"},{"size":478,"mtime":1613753350706,"results":"39","hashOfConfig":"23"},{"size":174,"mtime":1613752513457,"results":"40","hashOfConfig":"23"},{"size":181,"mtime":1613752306912,"results":"41","hashOfConfig":"23"},{"size":177,"mtime":1613752460578,"results":"42","hashOfConfig":"23"},{"size":189,"mtime":1613753306493,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"y9nkzz",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hbalty/Projects/others/coursera/confusion/src/App.js",[],["92","93"],"/Users/hbalty/Projects/others/coursera/confusion/src/index.js",[],["94","95"],"/Users/hbalty/Projects/others/coursera/confusion/src/components/MenuComponent.component.js",[],"/Users/hbalty/Projects/others/coursera/confusion/src/components/DishdetailComponent.js",["96","97","98"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardImg, CardTitle, CardText, CardBody, BreadcrumbItem, Breadcrumb,  Col, Row, Label, ModalHeader, ModalBody, Modal, Button \n} from 'reactstrap';\nimport {Â List } from 'reactstrap'; \nimport { LocalForm, Errors, Control } from 'react-redux-form'\n\n\n    \n    const required = (val) => val && val.length;\n    const maxLength = (len) => (val) => !(val) || (val.length <= len);\n    const minLength = (len) => (val) => val && (val.length >= len);\n\n\n\n    \n    class CommentForm extends Component{\n\n        constructor(props){\n            super(props);\n            this.state = {\n                isModalOpen : false\n            }\n            this.handleSubmit = this.handleSubmit.bind(this)\n            this.toggleModal = this.toggleModal.bind(this)\n        }\n\n        handleSubmit(values){\n            console.log(values)\n        }\n\n        toggleModal(){\n            console.log('isClicked')\n            this.setState({ isModalOpen : !this.state.isModalOpen})\n        }\n    \n\n        render(){\n            return (\n                    <div>\n                        <Button onClick={this.toggleModal}>  Add comment </Button>\n                        <Modal isOpen={this.state.isModalOpen}>\n                        <ModalHeader> Submit Comment</ModalHeader>\n                        <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)  }> \n                            <Row className=\"form-group\">\n                                <Label md={2}> Rating</Label>\n                                <Col md={10}> \n                                    <Control.select\n                                        className=\"form-control\"\n                                        name=\"rating\"\n                                        model=\".rating\"\n                                        validators={\n                                            { required }\n                                        }\n                                    > \n                                        <option selected> 1 </option>\n                                        <option> 2 </option>\n                                        <option> 3 </option>\n                                        <option> 4 </option>\n                                        <option> 5 </option>\n                                    </Control.select>\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".rating\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        <Row className=\"form-group\">\n\n                            <Label md={2}> Author </Label>\n                            <Col md={10}> \n                                <Control.text\n                                    className=\"form-control\"\n                                    name=\"author\"\n                                    model=\".author\"\n                                    placeholder=\"Author\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }}\n                                >\n                                </Control.text>\n                                <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n        \n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label md={2}> Comment </Label>\n                            <Col md={10}> \n                                <Control.textarea\n                                rows={6}\n                                    className=\"form-control\"\n                                    name=\"comment\"\n                                    model=\".comment\"\n                                >\n                                </Control.textarea>\n        \n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Col md={{size: 10, offset: 2}}>\n                                <Button  type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                </Button>\n                            </Col>\n                        </Row>\n\n                        </LocalForm>\n                            \n                        </ModalBody>\n                    </Modal>\n                </div> \n                \n            )\n        }\n\n        \n    }\n\n    function RenderDish( { dish }){ \n        if (dish != null)\n        return(\n            <Card>\n            <CardImg top src={dish.image} alt={dish.name} />\n            <CardBody>\n                <CardTitle>{dish.name}</CardTitle>\n                <CardText>{dish.description}</CardText>\n            </CardBody>\n            </Card>\n            );\n            else\n            return(\n                <div></div>\n                );\n    }\n\n    function RenderComments(Â {comments}){\n        if (comments != null){\n            const commentsCard = comments.map((comment) => {\n                return (\n                    <List type=\"unstyled\" key={comment.id}> \n                        <li> {Â comment.comment }</li>\n                        <li> --- {Â comment.author } - { Intl.DateTimeFormat('fr-FR', {Â year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.date))) }</li>\n                        \n                    </List>\n                )\n            }); \n\n            return <> \n                    {commentsCard}\n                    <CommentForm/>  \n                </>\n        } else \n        return <div> </div>\n        \n    }\n\n\n    const DishdetailComponent = (props) => {\n        if (props.dish != null ){\n            return (\n                <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderDish dish={props.dish} />\n                    </div>\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderComments comments={props.comments} />\n                    </div>\n                </div>\n                </div>\n            );\n        } else {\n            return null ;\n        }\n    }\n    \n\n        \n    \n\n\n\nexport default DishdetailComponent;","/Users/hbalty/Projects/others/coursera/confusion/src/reportWebVitals.js",[],["99","100"],"/Users/hbalty/Projects/others/coursera/confusion/src/shared/dishes.js",[],"/Users/hbalty/Projects/others/coursera/confusion/src/components/MainComponent.component.js",["101"],"/Users/hbalty/Projects/others/coursera/confusion/src/components/HeaderComponent.js",[],"/Users/hbalty/Projects/others/coursera/confusion/src/components/FooterComponent.js",[],["102","103"],"/Users/hbalty/Projects/others/coursera/confusion/src/components/HomeComponent.js",[],"/Users/hbalty/Projects/others/coursera/confusion/src/components/ContactComponent.js",["104","105","106","107","108","109","110","111"],"import React, { Component } from 'react'; \nimport { Link } from 'react-router-dom';\n\nimport { Breadcrumb, BreadcrumbItem,\n     Label, Col, Row, Button\n} from 'reactstrap';\n\nimport Â { Control, Errors, LocalForm } from 'react-redux-form'; \n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component  { \n    constructor(props){\n        super(props) ; \n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n    }\n\n    render(){\n        return (\n            <div className=\"container\">\n            <div className=\"row row-content\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                <div className=\"col-12\">\n                <h3>Contact us</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                </div>\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n                </div>\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" className=\"btn btn-info\" href=\"skype\"><i className=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                   <div className=\"col-12\">\n                      <h3>Send us your Feedback</h3>\n                   </div>\n                    <div className=\"col-12 col-md-9\">\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}  >\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text  id=\"firstname\" name=\"firstname\"\n                                        className=\"form-control\"\n                                        model=\".firstname\"\n                                        placeholder=\"First Name\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}/>\n                                        <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        className=\"form-control\"\n                                        model=\".lastname\"\n                                        placeholder=\"Last Name\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}/>\n                                        <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text id=\"telnum\" name=\"telnum\"\n                                    className=\"form-control\"\n                                        placeholder=\"Tel. Number\"\n                                        model=\".telnum\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                         />\n                                        <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        model=\".email\"\n                                        validators={{\n                                            required, validEmail\n                                        }}/>\n                                        <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox \n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\" /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\"  name=\"contactType\"\n                                            className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        className=\"form-control\"\n                                        rows=\"12\"\n                                        \n\n                                    ></Control.textarea>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button  type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n               </div>\n        </div>\n        )\n    }\n\n}\n\n    \n\n\n\nexport default Contact; ","/Users/hbalty/Projects/others/coursera/confusion/src/shared/leaders.js",[],"/Users/hbalty/Projects/others/coursera/confusion/src/shared/promotions.js",[],"/Users/hbalty/Projects/others/coursera/confusion/src/shared/comments.js",[],"/Users/hbalty/Projects/others/coursera/confusion/src/components/aboutusComponent.js",[],"/Users/hbalty/Projects/others/coursera/confusion/src/components/AboutusComponent.js",[],"/Users/hbalty/Projects/others/coursera/confusion/src/redux/configureStore.js",[],"/Users/hbalty/Projects/others/coursera/confusion/src/redux/dishes.js",[],"/Users/hbalty/Projects/others/coursera/confusion/src/redux/comments.js",[],"/Users/hbalty/Projects/others/coursera/confusion/src/redux/leaders.js",[],"/Users/hbalty/Projects/others/coursera/confusion/src/redux/promotions.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"112","replacedBy":"116"},{"ruleId":"114","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":49,"column":37,"nodeType":"120","endLine":57,"endColumn":38},{"ruleId":"118","severity":1,"message":"121","line":78,"column":33,"nodeType":"120","endLine":86,"endColumn":34},{"ruleId":"118","severity":1,"message":"122","line":104,"column":33,"nodeType":"120","endLine":109,"endColumn":34},{"ruleId":"112","replacedBy":"123"},{"ruleId":"114","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":23,"column":3,"nodeType":"127","messageId":"128","endLine":25,"endColumn":4},{"ruleId":"112","replacedBy":"129"},{"ruleId":"114","replacedBy":"130"},{"ruleId":"118","severity":1,"message":"121","line":71,"column":37,"nodeType":"120","endLine":77,"endColumn":45},{"ruleId":"118","severity":1,"message":"121","line":93,"column":37,"nodeType":"120","endLine":99,"endColumn":45},{"ruleId":"131","severity":1,"message":"132","line":95,"column":41,"nodeType":"133","endLine":95,"endColumn":58},{"ruleId":"118","severity":1,"message":"121","line":115,"column":37,"nodeType":"120","endLine":122,"endColumn":44},{"ruleId":"118","severity":1,"message":"121","line":139,"column":37,"nodeType":"120","endLine":145,"endColumn":45},{"ruleId":"118","severity":1,"message":"134","line":161,"column":45,"nodeType":"120","endLine":164,"endColumn":80},{"ruleId":"118","severity":1,"message":"119","line":170,"column":37,"nodeType":"120","endLine":171,"endColumn":70},{"ruleId":"118","severity":1,"message":"122","line":180,"column":37,"nodeType":"120","endLine":185,"endColumn":38},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["135"],["136"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["135"],["136"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]